---
title: "Ascites differentiated macs treated with VSIG4 mAbs (Boris)"
author: "ani.nguyen@verseautx.com"
date: "6/21/2021"
output: html_document
---

## 0. Intro

Analysis of ascites fluid differentiated macrophage assays with anti-VSIG4 antibodies.

## 1. Install and load packages

```{r}
library(ggplot2)
library(ggfortify)
library(gridExtra)
# library(nlme)
# library(easynls)
# library(EnvStats)
# library(survminer)
# library(survival)
# library(ggrepel)
library(reshape2)
library(openxlsx)
library(NMF)
library(dplyr)
library(EnvStats)

a = list()
a$raw = '/media/data/Luminex/Boris/20210621/QCed_concentrations'
a$res = '/media/data/Luminex/Boris/20210621/results'

theme<-theme(panel.background = element_blank(),panel.border=element_rect(fill=NA),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),strip.background=element_blank(),axis.text.x=element_text(colour="black"),axis.text.y=element_text(colour="black"),axis.ticks=element_line(colour="black"),plot.margin=unit(c(1,1,1,1),"line"))

options(stringsAsFactors = FALSE)
```

```{r}
# custom functions
data_summary <- function(data, varname, groupnames){
  require(plyr)
  summary_func <- function(x, col){
    c(mean = mean(x[[col]], na.rm=TRUE),
      sd = sd(x[[col]], na.rm=TRUE),
      CV = cv(x[[col]], na.rm=TRUE))
  }
  data_sum<-ddply(data, groupnames, .fun=summary_func,
                  varname)
  data_sum <- rename(data_sum, c("mean" = varname))
 return(data_sum)
}
```

## 2. Load Luminex data

### 2.a Load data tables

```{r}
# concentrations calculated with drLumi
df = read.xlsx(file.path(a$raw,'06.10.2021 Ascites assay exp5.xlsx'), sheet = 'Luminex data')
colnames(df)[4:5] = c('LPS','pct_ascites')
df$mAb_conc = sapply(df$mAb, function(c) unlist(strsplit(c, ' ', fixed=T))[2])
df$mAb_conc = gsub('ug/ml','',df$mAb_conc, fixed=T)
df$mAb = sapply(df$mAb, function(c) unlist(strsplit(c, ' ', fixed=T))[1])
df$key = paste(df$Donor, df$LPS, df$pct_ascites, df$mAb, df$mAb_conc, sep = '_')
df$rep = 1
df$rep[duplicated(df$key)] = 2
df$key = paste(df$Donor, df$LPS, df$pct_ascites, df$mAb, df$mAb_conc, df$rep, sep = '_')
df = df[,c(34,1:6,33,35,7:32)]
rownames(df) = df$key
```

### 2.b Process sample annotation

```{r}
annot = df[,1:10]
annot$LPS = factor(annot$LPS)
annot$pct_ascites = factor(annot$pct_ascites)
annot$mAb_conc[annot$mAb=='ILT-4'] = '1'
annot$LPS[annot$mAb=='ILT-4'] = '0'
# annot$Donor = factor(annot$Donor)
```

### 2.c Process cytokine measurements

#### 2.c.1 Calculate final concentration (*dilution factor)

```{r}
cyts = colnames(df)[11:ncol(df)]
m = as.matrix(df[,cyts])

# apply dilution factor
tmp = m
for (i in 1:nrow(m)) {
  tmp[i,] = m[i,]*annot$dilution.factor[i]
}
m = tmp
```

#### 2.c.2 Histograms of cytokine measurements

```{r}
dir.create(file.path(a$res,'QC'))
```

```{r}
ncol = 5
png(file.path(a$res,'QC','histograms.png'), width = 3*ncol, height= 3*ceiling(length(cyts)/ncol), unit = 'in', res = 150)
par(mfrow=c(ceiling(length(cyts)/ncol),ncol))
for (i in 1:ncol(m)) {
  hist(m[,i],
       main = colnames(m)[i],
       xlab = 'Cytokine level (pg/ml)')
}
dev.off()
```
#### 2.c.3 Log transform and create histograms

```{r}
ncol = 5
m.log = log10(m)
png(file.path(a$res,'QC','histograms_log10.png'), width = 3*ncol, height= 3*ceiling(length(cyts)/ncol), unit = 'in', res = 150)
par(mfrow=c(ceiling(length(cyts)/ncol),ncol))
for (i in 1:ncol(m.log)) {
  hist(m.log[,i],
       main = colnames(m.log)[i],
       xlab = 'Cytokine level, log10(pg/ml)')
}
dev.off()
```

#### 2.c.4 Sorted values of cytokine measurements

```{r}
ncol = 5
png(file.path(a$res,'QC','sorted_cyt_log10.png'), width = 3*ncol, height= 3*ceiling(length(cyts)/ncol), unit = 'in', res = 150)
par(mfrow=c(ceiling(length(cyts)/ncol),ncol))
for (i in 1:ncol(m.log)) {
  plot(x = 1:length(sort(m.log[,i])), y = sort(m.log[,i]),
       cex = 0.7,
       main = colnames(m.log)[i],
       ylab = 'Cytokine level, log10(pg/ml)',
       xlab = 'Sample Index')
}
dev.off()
```

#### 2.c.5 Heatmap

```{r}
dir.create(file.path(a$res,'heatmaps'))
```

```{r}
png(file.path(a$res,'heatmaps', 'heatmap_levels.png'), width = 14, height = 7, unit='in', res = 150)
# aheatmap(t(m1.log[,setdiff(cyts,c('IL-8','CCL2'))]),
aheatmap(t(m.log),
         hclustfun = 'ward',
         # cellwidth = 8,
         cellheight = 7,
         na.color = 'grey',
         annCol = data.frame(Donor = annot$Donor,
                             LPS = annot$LPS,
                             Ascites = annot$pct_ascites,
                             mAb = annot$mAb,
                             mAb_conc = annot$mAb_conc),
         annColors = list(mAb = 'Paired')
         )
dev.off()
```

```{r}
png(file.path(a$res,'heatmaps', 'heatmap_levels_Spearman.png'), width = 14, height = 7, unit='in', res = 150)
aheatmap(t(m.log[,setdiff(cyts,c('IL.5'))]),
# aheatmap(t(m.log),
         hclustfun = 'ward',
         distfun = 'spearman',
         # cellwidth = 8,
         cellheight = 7,
         na.color = 'grey',
         annCol = data.frame(Donor = annot$Donor,
                             LPS = annot$LPS,
                             Ascites = annot$pct_ascites,
                             mAb = annot$mAb,
                             mAb_conc = annot$mAb_conc),
         annColors = list(mAb = 'Paired')
         )
dev.off()
```

```{r}
png(file.path(a$res,'heatmaps', 'heatmap_levels_zscore.png'), width = 14, height = 7, unit='in', res = 150)
# aheatmap(t(m1.log[,setdiff(cyts,c('IL-8','CCL2'))]),
tmp = scale(m.log[,setdiff(cyts,c('IL.5'))], center = T, scale = T)
aheatmap(t(tmp),
         breaks = c(range(tmp)[1],seq(-3,3,length.out = 49),range(tmp)[2]),
         color = colorRampPalette(c("navy", "white", "firebrick3"))(50),
         hclustfun = 'ward',
         # cellwidth = 8,
         cellheight = 7,
         na.color = 'grey',
         annCol = data.frame(Donor = annot$Donor,
                             LPS = annot$LPS,
                             Ascites = annot$pct_ascites,
                             mAb = annot$mAb,
                             mAb_conc = annot$mAb_conc),
         annColors = list(mAb = 'Paired')
         )
dev.off()
```

```{r}
png(file.path(a$res,'heatmaps', 'heatmap_levels_zscore_spearman.png'), width = 14, height = 7, unit='in', res = 150)
# aheatmap(t(m1.log[,setdiff(cyts,c('IL-8','CCL2'))]),
tmp = scale(m.log[,setdiff(cyts,c('IL.5'))], center = T, scale = T)
aheatmap(t(tmp),
         breaks = c(range(tmp)[1],seq(-3,3,length.out = 49),range(tmp)[2]),
         color = colorRampPalette(c("navy", "white", "firebrick3"))(50),
         hclustfun = 'ward',
         distfun = 'spearman',
         # cellwidth = 8,
         cellheight = 7,
         na.color = 'grey',
         annCol = data.frame(Donor = annot$Donor,
                             LPS = annot$LPS,
                             Ascites = annot$pct_ascites,
                             mAb = annot$mAb,
                             mAb_conc = annot$mAb_conc),
         annColors = list(mAb = 'Paired')
         )
dev.off()
```
### 2.d Fold change calculations

```{r}
m.fc = m
m.fc = m.fc[annot$key[which(annot$mAb %in% c("Synagis","12A12","ILT-4"))],]
for (i in 1:nrow(m.fc)) {
  key = rownames(m.fc)[i]
  mAb_conc = annot$mAb_conc[which(annot$key==key)]
  donor = annot$Donor[which(annot$key==key)]
  lps = annot$LPS[which(annot$key==key)]
  af= annot$pct_ascites[which(annot$key==key)]
  iso.key = annot$key[which(annot$mAb=='Synagis' & annot$mAb_conc==mAb_conc & annot$Donor==donor & annot$LPS==lps & annot$pct_ascites==af)]
  if (length(iso.key)>1) {
    iso = apply(m[iso.key,],2,mean)
  } else {
    iso = m[iso.key,]
  }
  m.fc[i,] = m[key,]/iso
}
```

```{r}
df.fc = cbind(annot[rownames(m.fc),], m.fc)
write.csv(df.fc, file.path(a$res,'df.fc.csv'),row.names = F, quote = F)
```

## 3. PCA

```{r}
dir.create(file.path(a$res,'PCA'))
```

### 3.a All samples, levels

```{r}
tmp = apply(m.log, 2, var)
ss = names(tmp[tmp>0.05])
my.pca = prcomp(m.log[,ss], center = TRUE, scale. = TRUE)
```

```{r}
df.plot = cbind(annot, my.pca$x)
```

```{r}
dir.create(file.path(a$res,'PCA','all_samples'))
```

```{r}
# png(file.path(a$res, 'PCA','all_samples','pca-donor.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples','pca-donor-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot,
           shape = 21,
           fill = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','all_samples','pca-lps.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples','pca-lps-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot,
           col = "LPS",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','all_samples','pca-AF.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples','pca-AF-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot,
           col = "pct_ascites",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
png(file.path(a$res, 'PCA','all_samples','pca-mAb.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples','pca-mAb-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           # x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot,
           col = "mAb",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

### 3.b Synagis, levels

```{r}
my.pca = prcomp(m.log[which(annot$mAb=='Synagis'),ss], center = TRUE, scale. = TRUE)
```

```{r}
df.plot = cbind(annot[which(annot$mAb=='Synagis'),], my.pca$x)
```

```{r}
dir.create(file.path(a$res,'PCA','Synagis'))
```

```{r}
# png(file.path(a$res, 'PCA','Synagis','pca-donor.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','Synagis','pca-donor-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[which(annot$mAb=='Synagis'),],
           shape = 21,
           fill = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','Synagis','pca-lps.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','Synagis','pca-lps-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[which(annot$mAb=='Synagis'),],
           col = "LPS",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','Synagis','pca-AF.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','Synagis','pca-AF-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[which(annot$mAb=='Synagis'),],
           col = "pct_ascites",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
png(file.path(a$res, 'PCA','Synagis','pca-mAb_conc.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','Synagis','pca-mAb-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           # x=1,y=3,
           # x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[which(annot$mAb=='Synagis'),],
           col = "mAb_conc",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

### 3.c All samples, FC

```{r}
m.fc.log = log2(m.fc)
m.fc.log = m.fc.log[annot$key[which(annot$mAb %in% c('12A12','ILT-4'))],]
tmp = apply(m.fc.log, 2, var)
ss = names(tmp[tmp>0.05])

outliers = c('Donor2_0.06_20_12A12_1_1')
my.pca = prcomp(m.fc.log[setdiff(rownames(m.fc.log),outliers),ss])
```

```{r}
df.plot = cbind(annot[rownames(my.pca$x),], my.pca$x)
```

```{r}
dir.create(file.path(a$res,'PCA','all_samples_FC'))
```

```{r}
# png(file.path(a$res, 'PCA','all_samples_FC','pca-donor.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-donor-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples_FC','pca-donor-1v4.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           # x=1,y=3,
           x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[rownames(my.pca$x),],
           shape = 21,
           fill = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','all_samples_FC','pca-lps.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-lps-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples_FC','pca-lps-1v4.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           # x=1,y=3,
           x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[rownames(my.pca$x),],
           col = "LPS",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','all_samples_FC','pca-AF.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-AF-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-AF-1v4.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-AF-2v4.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-AF-2v5.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples_FC','pca-AF-2v6.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           # x=1,y=3,
           # x=1,y=4,
           # x=2,y=4,
           # x=2,y=5,
           x=2,y=6,
           data = annot[rownames(my.pca$x),],
           col = "pct_ascites",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','all_samples_FC','pca-mAb.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-mAb-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples_FC','pca-mAb-1v4.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           # x=1,y=3,
           x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[rownames(my.pca$x),],
           col = "mAb",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

```{r}
# png(file.path(a$res, 'PCA','all_samples_FC','pca-mAb_conc.png'), width = 8, height = 6, unit = 'in', res = 150)
# png(file.path(a$res, 'PCA','all_samples_FC','pca-mAb_conc-1v3.png'), width = 8, height = 6, unit = 'in', res = 150)
png(file.path(a$res, 'PCA','all_samples_FC','pca-mAb_conc-1v4.png'), width = 8, height = 6, unit = 'in', res = 150)
p = autoplot(my.pca,
           # x=1,y=3,
           x=1,y=4,
           # x=2,y=3,
           # x=2,y=4,
           data = annot[rownames(my.pca$x),],
           col = "mAb_conc",
           shape = "Donor",
           size = 3,
           # shape = T,
           label = F, label.size = 3)+ 
# scale_color_brewer(palette = "Paired")+
theme_classic() + theme(panel.border = element_rect(fill = NA), aspect.ratio = 1)
print(p)
dev.off()
```

## 4. Bar charts

### 4.a Levels

```{r}
dir.create(file.path(a$res,'barcharts_level'))
```

#### 4.a.1 Synagis 1 ug/ml, different LPS concentrations

```{r}
outliers = c()

df.plot = cbind(annot, m)
df.plot = df.plot[which(df.plot$mAb=='Synagis' & df.plot$mAb_conc=='1'),]
# df.plot$LPS = as.numeric(as.character(df.plot$LPS))
df.plot$group = paste0(df.plot$Donor,'\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("Donor1\n5% AF","Donor1\n10% AF","Donor1\n20% AF","Donor2\n5% AF","Donor2\n10% AF","Donor2\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
for (cyt in cyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('pg/ml') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    # scale_y_continuous(trans='log10') +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
png(file.path(a$res,'barcharts_level','Synagis_1ug.ml_diff_LPS.png'),width = 5*5, height = 3*5, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=5)))
dev.off()
```

```{r}
outliers = c()

df.plot = cbind(annot, m)
df.plot = df.plot[which(df.plot$mAb=='Synagis' & df.plot$mAb_conc=='1'),]
# df.plot$LPS = as.numeric(as.character(df.plot$LPS))
df.plot$group = paste0(df.plot$Donor,'\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("Donor1\n5% AF","Donor1\n10% AF","Donor1\n20% AF","Donor2\n5% AF","Donor2\n10% AF","Donor2\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
# mycyts = c('CCL3','CCL4','CCL5','CXCL9','CXCL10','IL.10','IL.12p40','IL.1RA','IL.2R','IL.6','TNF.alpha')
# mycyts = c('CCL2','GM.CSF','IFN.alpha','IL.15','IL.17A','IL.4','IL.7','IL.8')
mycyts = setdiff(cyts,c('CCL3','CCL4','CCL5','CXCL9','CXCL10','IL.10','IL.12p40','IL.1RA','IL.2R','IL.6','TNF.alpha','CCL2','GM.CSF','IFN.alpha','IL.15','IL.17A','IL.4','IL.7','IL.8'))
for (cyt in mycyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('pg/ml') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    # scale_y_continuous(trans='log10') +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
# png(file.path(a$res,'barcharts_level','Synagis_1ug.ml_diff_LPS_set1.png'),width = 5*4, height = 3*3, unit = 'in', res = 150)
# png(file.path(a$res,'barcharts_level','Synagis_1ug.ml_diff_LPS_set2.png'),width = 5*4, height = 3*2, unit = 'in', res = 150)
png(file.path(a$res,'barcharts_level','Synagis_1ug.ml_diff_LPS_set3.png'),width = 5*4, height = 3*2, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=4)))
dev.off()
```

#### 4.a.2 Synagis 0.1 ug/ml, different LPS concentrations

```{r}
outliers = c()

df.plot = cbind(annot, m)
df.plot = df.plot[which(df.plot$mAb=='Synagis' & df.plot$mAb_conc=='0.1'),]
# df.plot$LPS = as.numeric(as.character(df.plot$LPS))
df.plot$group = paste0(df.plot$Donor,'\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("Donor1\n5% AF","Donor1\n10% AF","Donor1\n20% AF","Donor2\n5% AF","Donor2\n10% AF","Donor2\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
for (cyt in cyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('pg/ml') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    # scale_y_continuous(trans='log10') +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
png(file.path(a$res,'barcharts_level','Synagis_0.1ug.ml_diff_LPS.png'),width = 5*5, height = 3*5, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=5)))
dev.off()
```

```{r}
outliers = c()

df.plot = cbind(annot, m)
df.plot = df.plot[which(df.plot$mAb=='Synagis' & df.plot$mAb_conc=='0.1'),]
# df.plot$LPS = as.numeric(as.character(df.plot$LPS))
df.plot$group = paste0(df.plot$Donor,'\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("Donor1\n5% AF","Donor1\n10% AF","Donor1\n20% AF","Donor2\n5% AF","Donor2\n10% AF","Donor2\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
# mycyts = c('CCL3','CCL4','CCL5','CXCL9','CXCL10','IL.10','IL.12p40','IL.1RA','IL.2R','IL.6','TNF.alpha')
# mycyts = c('CCL2','GM.CSF','IFN.alpha','IL.15','IL.17A','IL.4','IL.7','IL.8')
mycyts = setdiff(cyts,c('CCL3','CCL4','CCL5','CXCL9','CXCL10','IL.10','IL.12p40','IL.1RA','IL.2R','IL.6','TNF.alpha','CCL2','GM.CSF','IFN.alpha','IL.15','IL.17A','IL.4','IL.7','IL.8'))
for (cyt in mycyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('pg/ml') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    # scale_y_continuous(trans='log10') +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
# png(file.path(a$res,'barcharts_level','Synagis_0.1ug.ml_diff_LPS_set1.png'),width = 5*4, height = 3*3, unit = 'in', res = 150)
# png(file.path(a$res,'barcharts_level','Synagis_0.1ug.ml_diff_LPS_set2.png'),width = 5*4, height = 3*2, unit = 'in', res = 150)
png(file.path(a$res,'barcharts_level','Synagis_0.1ug.ml_diff_LPS_set3.png'),width = 5*4, height = 3*2, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=4)))
dev.off()
```

### 4.b FC


```{r}
dir.create(file.path(a$res,'barcharts_FC'))
```

#### 4.b.1 12A12 over Synagis 1 ug/ml, different LPS concentrations

```{r}
outliers = c('Donor2_0.06_20_12A12_1_1')

df.plot = cbind(annot[rownames(m.fc),], m.fc)
df.plot = df.plot[which(df.plot$mAb=='12A12' & df.plot$mAb_conc=='1'),]
df.plot$group = paste0(df.plot$Donor,'\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("Donor1\n5% AF","Donor1\n10% AF","Donor1\n20% AF","Donor2\n5% AF","Donor2\n10% AF","Donor2\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
for (cyt in cyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('Fold over Isotype') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    scale_y_continuous(trans='log2', breaks=c(2^(-5),2^(-4),2^(-3),2^(-2),2^(-1),
                                              1/1.5,1/1.2,1,1.2,1.5,
                                              2^1,2^2,2^3,2^4,2^5),
                       labels = scales::number_format(accuracy = 0.1)) +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
png(file.path(a$res,'barcharts_FC','12A12_1ug.ml_diff_LPS.png'),width = 5*5, height = 3*5, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=5)))
dev.off()
```

#### 4.b.2 12A12 over Synagis 0.1 ug/ml, different LPS concentrations

```{r}
outliers = c('Donor2_0.06_20_12A12_1_1')

df.plot = cbind(annot[rownames(m.fc),], m.fc)
df.plot = df.plot[which(df.plot$mAb=='12A12' & df.plot$mAb_conc=='0.1'),]
df.plot$group = paste0(df.plot$Donor,'\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("Donor1\n5% AF","Donor1\n10% AF","Donor1\n20% AF","Donor2\n5% AF","Donor2\n10% AF","Donor2\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
for (cyt in cyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('Fold over Isotype') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    scale_y_continuous(trans='log2', breaks=c(2^(-5),2^(-4),2^(-3),2^(-2),2^(-1),
                                              1/1.5,1/1.2,1,1.2,1.5,
                                              2^1,2^2,2^3,2^4,2^5),
                       labels = scales::number_format(accuracy = 0.1)) +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
png(file.path(a$res,'barcharts_FC','12A12_0.1ug.ml_diff_LPS.png'),width = 5*5, height = 3*5, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=5)))
dev.off()
```

#### 4.b.3 12A12 over Synagis, Donor 1, different LPS and mAb concentrations

```{r}
outliers = c('Donor2_0.06_20_12A12_1_1')

df.plot = cbind(annot[rownames(m.fc),], m.fc)
df.plot = df.plot[which(df.plot$mAb=='12A12' & df.plot$Donor=='Donor1'),]
df.plot$group = paste0(df.plot$mAb_conc,'ug/ml','\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("0.1ug/ml\n5% AF","0.1ug/ml\n10% AF","0.1ug/ml\n20% AF","1ug/ml\n5% AF","1ug/ml\n10% AF","1ug/ml\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
for (cyt in cyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('Fold over Isotype') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    scale_y_continuous(trans='log2', breaks=c(2^(-5),2^(-4),2^(-3),2^(-2),2^(-1),
                                              1/1.5,1/1.2,1,1.2,1.5,
                                              2^1,2^2,2^3,2^4,2^5),
                       labels = scales::number_format(accuracy = 0.1)) +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
png(file.path(a$res,'barcharts_FC','12A12_Donor1_diff_LPS.png'),width = 5*5, height = 3*5, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=5)))
dev.off()
```

#### 4.b.4 12A12 over Synagis, Donor 2, different LPS and mAb concentrations

```{r}
outliers = c('Donor2_0.06_20_12A12_1_1')

df.plot = cbind(annot[rownames(m.fc),], m.fc)
df.plot = df.plot[which(df.plot$mAb=='12A12' & df.plot$Donor=='Donor2'),]
df.plot$group = paste0(df.plot$mAb_conc,'ug/ml','\n',df.plot$pct_ascites,'% AF')
df.plot$group = factor(df.plot$group, levels = c("0.1ug/ml\n5% AF","0.1ug/ml\n10% AF","0.1ug/ml\n20% AF","1ug/ml\n5% AF","1ug/ml\n10% AF","1ug/ml\n20% AF"))
df.plot = df.plot[!is.element(df.plot$key, outliers),]

p.ls = list()
for (cyt in cyts) {
  p.ls[[cyt]] = ggplot(df.plot, aes_string(x='group', y=cyt, fill='LPS')) +
    geom_bar(stat="summary", color="black", fun='mean',
             position=position_dodge(), width=.75) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    geom_point(position = position_dodge(width=.75)) +
    geom_vline(xintercept = 3.5, linetype = 'dashed') +
    ggtitle(cyt) +
    ylab('Fold over Isotype') +
    labs(fill="LPS (ng/ml)") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    scale_y_continuous(trans='log2', breaks=c(2^(-5),2^(-4),2^(-3),2^(-2),2^(-1),
                                              1/1.5,1/1.2,1,1.2,1.5,
                                              2^1,2^2,2^3,2^4,2^5),
                       labels = scales::number_format(accuracy = 0.1)) +
    theme_classic()# +
    # theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
    #         # legend.position = "none"
    #       )
}
png(file.path(a$res,'barcharts_FC','12A12_Donor2_diff_LPS.png'),width = 5*5, height = 3*5, unit = 'in', res = 150)
print(do.call("grid.arrange", c(p.ls, ncol=5)))
dev.off()
```

#### 4.b.5 ILT-4 over Synagis 1 ug/ml, no LPS

```{r}
df.plot = cbind(annot[rownames(m.fc),], m.fc)
# df.plot = df.plot[which(df.plot$mAb=='ILT-4' & df.plot$Donor=='Donor1'),]
df.plot = df.plot[which(df.plot$mAb=='ILT-4' & df.plot$Donor=='Donor2'),]
df.plot = melt(df.plot[,c('pct_ascites',cyts)], id.vars = c("pct_ascites"))
df.plot$pct_ascites = factor(df.plot$pct_ascites, levels = c('5','10','20'))

p1 = ggplot(df.plot, aes_string(x='variable', y='value', fill='pct_ascites')) +
    geom_bar(stat="identity", color="black",width=0.7,
             position=position_dodge()) +
    # geom_errorbar(aes(ymin=conc-sd, ymax=conc+sd), width=.2,position=position_dodge(width = .9)) +
    # geom_point(data = df.plot.1, aes(x=Treatment, y=conc, col = Donor), fill = 'black', pch = 21, cex = 2, position = position_dodge(width=.9)) +
    # ggtitle('Donor1, 1ug/ml a-ILT4, no LPS') +
    ggtitle('Donor2, 1ug/ml a-ILT4, no LPS') +
    ylab('Fold over Isotype') +
    labs(fill="% Ascites") +
    scale_fill_brewer(palette = 'Blues') +
    # scale_color_brewer(palette = 'Paired') +
    scale_y_continuous(trans='log2', breaks=c(2^(-5),2^(-4),2^(-3),2^(-2),2^(-1),
                                              1/1.5,1/1.2,1,1.2,1.5,
                                              2^1,2^2,2^3,2^4,2^5),
                       labels = scales::number_format(accuracy = 0.1)) +
    theme_classic() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
            # legend.position = "none"
          )
# png(file.path(a$res,'barcharts_FC','ILT4_Donor1.png'),width = 9, height = 3, unit = 'in', res = 150)
png(file.path(a$res,'barcharts_FC','ILT4_Donor2.png'),width = 9, height = 3, unit = 'in', res = 150)
print(p1)
dev.off()
```



## END
